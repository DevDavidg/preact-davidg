:root {
  --perspective-value: 1000px;
  --transform-transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --shadow-color-light: rgba(0, 0, 0, 0.1);
  --shadow-color-dark: rgba(0, 0, 0, 0.3);
  --glow-color-light: rgba(255, 255, 255, 0.5);
  --glow-color-dark: rgba(120, 120, 255, 0.3);
  --gradient-light: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0.05)
  );
  --gradient-dark: linear-gradient(
    135deg,
    rgba(50, 50, 80, 0.2),
    rgba(30, 30, 60, 0.1)
  );
}

.dark {
  --shadow-color-light: rgba(0, 0, 0, 0.2);
  --shadow-color-dark: rgba(0, 0, 0, 0.4);
  --glow-color-light: rgba(100, 100, 255, 0.2);
  --glow-color-dark: rgba(80, 80, 200, 0.15);
}

/* General 3D setup: Enables perspective view. Used by AboutMe.tsx, Contact.tsx, Hero.tsx */
.perspective {
  perspective: var(--perspective-value);
}

/* Unused .perspective-origin-center removed */

/* General 3D setup: Allows child elements to maintain their 3D position. Used by AboutMe.tsx, Contact.tsx, Hero.tsx */
.preserve-3d {
  transform-style: preserve-3d;
}

/* Unused .backface-hidden removed */

/* Used by: src/components/AboutMe.tsx */
.card-3d {
  position: relative;
  transform-style: preserve-3d;
  transition: var(--transform-transition);
}

.card-3d:hover {
  transform: translateZ(20px) rotateX(5deg) rotateY(5deg);
}

/* Used by: src/components/AboutMe.tsx */
.depth-effect {
  position: relative;
  transform-style: preserve-3d;
}

.depth-effect::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--gradient-light);
  transform: translateZ(-1px);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.depth-effect:hover::before {
  opacity: 1;
}

.dark .depth-effect::before {
  background: var(--gradient-dark);
}

/* Unused .layer-* classes removed */

.shadow-3d {
  box-shadow: 0 10px 20px -5px var(--shadow-color-light),
    0 20px 30px -10px var(--shadow-color-dark);
}

/* Used by: src/components/AboutMe.tsx */
.shadow-3d-hover {
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.shadow-3d-hover:hover {
  box-shadow: 0 15px 30px -10px var(--shadow-color-light),
    0 30px 60px -15px var(--shadow-color-dark);
  transform: translateY(-5px);
}

/* Used by: src/components/AboutMe.tsx */
.glow-3d {
  position: relative;
}

.glow-3d::after {
  content: "";
  position: absolute;
  inset: -5px;
  background: transparent;
  border-radius: inherit;
  box-shadow: 0 0 15px 5px var(--glow-color-light);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.glow-3d:hover::after {
  opacity: 1;
}

/* Unused .float-card-3d and its keyframes removed */
/* Unused .prism-3d removed */
/* Unused .animate-float-3d and its keyframes removed */
/* Unused .animate-rotate-3d and its keyframes removed */
/* Unused .parallax-bg removed */

/* Used by: src/components/AboutMe.tsx */
.transform-3d-hover {
  transition: transform 0.3s ease;
}

.transform-3d-hover:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg) /* Uses hardcoded 1000px, not var(--perspective-value) */
    scale3d(1.05, 1.05, 1.05);
}

/* Unused .perspective-<value> classes removed */
/* Unused .glass-3d styles removed */
/* Unused .reflection-3d styles removed */
/* Unused .rotate-z-3d and its keyframes removed */
/* Unused .shine-3d styles removed */
/* Unused .neon-3d and its keyframes removed */

@media (max-width: 768px) {
  :root {
    --perspective-value: 800px;
  }

  /* For .card-3d, used by: src/components/AboutMe.tsx */
  .card-3d:hover {
    transform: translateZ(10px) rotateX(2deg) rotateY(2deg);
  }

  /* Unused .animate-float-3d media query styles removed */
  /* Unused .layer-* media query styles removed */
}

/* Unused .cube-3d styles removed */
/* Unused .light-3d styles removed */
/* Unused .grain-3d styles removed */
/* Unused .depth-oscillate and its keyframes removed */
